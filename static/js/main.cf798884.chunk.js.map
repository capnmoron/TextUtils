{"version":3,"sources":["components/Navbar.js","components/Textform.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","abtme","class","onClick","tm","role","htmlFor","Textform","useState","text","setText","heading","value","rows","onChange","event","console","log","target","a","toUpperCase","toLowerCase","split","length","defaultProps","App","setmode","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAIe,SAASA,EAAOC,GAC3B,OACI,qBAAKC,UAAS,yCAAoCD,EAAME,KAA1C,eAAqDF,EAAME,MAAzE,SACI,sBAAKD,UAAU,kBAAf,UAEI,mBAAGA,UAAU,eAAeE,KAAK,IAAjC,SAAsCH,EAAMI,QAC5C,wBAAQH,UAAU,iBAAiBI,KAAK,SAAS,iBAAe,WAAW,iBAAe,0BAA0B,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,oBAA5L,SACI,sBAAMJ,UAAU,0BAEpB,sBAAKA,UAAU,2BAA2BK,GAAG,yBAA7C,UACI,oBAAIL,UAAU,kCAAd,SACI,oBAAIA,UAAU,WAAd,SAEI,mBAAGA,UAAU,kBAAkB,eAAa,OAAOE,KAAK,IAAxD,SAA6DH,EAAMO,YAU3E,sBAAKC,MAAK,sCAA8C,UAAbR,EAAME,KAAe,OAAO,SAAvE,UACI,uBAAOD,UAAU,mBAAmBI,KAAK,WAAWI,QAAST,EAAMU,GAAIC,KAAK,SAASL,GAAG,2BACxF,uBAAOL,UAAU,mBAAmBW,QAAQ,0BAA5C,kCC5BT,SAASC,EAASb,GAC7B,IAmBA,EAAwBc,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,OACI,qCACI,sBAAKf,UAAU,YAAf,UACI,mCAAMD,EAAMiB,WACZ,qBAAKhB,UAAU,OAAf,SACI,0BAAUA,UAAU,eAAeiB,MAAOH,EAAMT,GAAG,QAAQa,KAAK,IAAIC,SAfnE,SAACC,GACdC,QAAQC,IAAI,aACZP,EAAQK,EAAMG,OAAON,YAeb,wBAAQjB,UAAU,uBAAuBQ,QA3BrC,WACZa,QAAQC,IAAI,2BAA6BR,GACzC,IAAIU,EAAIV,EAAKW,cACbV,EAAQS,IAwBA,wBACA,wBAAQxB,UAAU,uBAAuBQ,QAvBpC,WACba,QAAQC,IAAI,2BAA6BR,GACzC,IAAIU,EAAIV,EAAKY,cACbX,EAAQS,IAoBA,wBACA,wBAAQxB,UAAU,uBAAuBQ,QAfpC,WACba,QAAQC,IAAI,2BAA6BR,GAEzCC,EADQ,KAaA,sBAEJ,sBAAKf,UAAU,iBAAf,UACI,2CACA,sDAAwB,kCAAKc,EAAKa,MAAM,KAAKC,OAArB,OAAxB,iCAAuF,4BAAId,EAAKc,SAAhG,OACA,8BAAG,kCAAK,KAAQd,EAAKa,MAAM,KAAKC,OAA7B,OAAH,mBACA,yCACCd,QDGjBhB,EAAO+B,aACP,CACI1B,MAAO,wBACPG,MAAO,iBEJIwB,MA7Bf,WACE,MAAwBjB,mBAAS,SAAjC,mBAAOZ,EAAP,KAAa8B,EAAb,KASA,OACE,qCAEI,cAACjC,EAAD,CAAQK,MAAM,YAAYG,MAAM,OAAOL,KAAMA,EAAMQ,GAXtC,WAEfsB,EADW,UAAT9B,EACM,OAGA,YAON,qBAAKD,UAAU,iBAAf,SAMM,cAACY,EAAD,CAAUI,QAAQ,kBAAkBf,KAAMA,UCnBzC+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.cf798884.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n                <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">{props.abtme}</Link> */}\r\n                            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">{props.abtme}</a>\r\n                        </li>\r\n                        {/* <li className=\"nav-item\"> */}\r\n                            {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/about\">About</Link> */}\r\n                        {/* </li> */}\r\n                    </ul>\r\n                    {/* <form className=\"d-flex\">\r\n                        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n                        <button className =\"btn btn-outline-success\" type =\"submit\">Search</button>\r\n                    </form> */}\r\n                    <div class={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n                        <input className=\"form-check-input\" type=\"checkbox\" onClick={props.tm} role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault \">Dark Mode</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\nNavbar.propTypes =\r\n{\r\n    title: PropTypes.string,\r\n    abtme: PropTypes.string,\r\n}\r\nNavbar.defaultProps =\r\n{\r\n    title: \"The unmentioned title\",\r\n    abtme: \"My about info\",\r\n}\r\n","import React, { useState } from 'react'\r\nexport default function Textform(props) {\r\n    const handler = () => {\r\n        console.log(\"Upperclasser was clicked\" + text);\r\n        let a = text.toUpperCase();\r\n        setText(a);\r\n    }\r\n    const handler1 = () => {\r\n        console.log(\"Upperclasser was clicked\" + text);\r\n        let a = text.toLowerCase();\r\n        setText(a);\r\n    }\r\n    const handler2 = (event) => {\r\n        console.log(\"On change\");\r\n        setText(event.target.value);\r\n    }\r\n    const handler3 = () => {\r\n        console.log(\"Upperclasser was clicked\" + text);\r\n        let a = '';\r\n        setText(a);\r\n    }\r\n    const [text, setText] = useState('');\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <h1> {props.heading}</h1>\r\n                <div className=\"mb-3\">\r\n                    <textarea className=\"form-control\" value={text} id=\"mybox\" rows=\"8\" onChange={handler2}></textarea>\r\n                </div>\r\n                <button className=\"btn btn-primary mx-3\" onClick={handler}>Uppercaser</button>\r\n                <button className=\"btn btn-primary mx-3\" onClick={handler1}>Lowercaser</button>\r\n                <button className=\"btn btn-primary mx-3\" onClick={handler3}>Clear</button>\r\n            </div>\r\n            <div className=\"container my-5\">\r\n                <h2> Summary </h2>\r\n                <p> Number of words are <b> {text.split(\" \").length} </b> and Number of characters are <b>{text.length}</b> </p>\r\n                <p><b> {0.008 * text.split(\" \").length} </b> minutes read</p>\r\n                <h2>Preview</h2>\r\n                {text}\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n","import './App.css';\nimport React, { useState } from 'react'\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\n// import About from './components/About';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setmode] = useState('light');\n  const togglemode = () => {\n    if (mode === 'light') {\n      setmode('dark');\n    }\n    else {\n      setmode('light');\n    }\n  }\n  return (\n    <>\n      {/* <Router> */}\n        <Navbar title=\"TextUtils\" abtme=\"Home\" mode={mode} tm={togglemode} />\n        <div className=\"container my-3\">\n          {/* <Switch>\n            <Route exact path=\"/about\">\n              <About />\n            </Route>\n            <Route exact path=\"/\"> */}\n              <Textform heading=\"Enter Text Here\" mode={mode} />\n            {/* </Route>\n          </Switch> */}\n        </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}